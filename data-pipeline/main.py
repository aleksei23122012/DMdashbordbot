import pandas as pd
import gspread
import os
import json

# --- [ –ù–ê–°–¢–†–û–ô–ö–ò –°–ö–†–ò–ü–¢–ê ] ---
# –í–ê–ñ–ù–û: –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∏ –Ω–∞–∑–≤–∞–Ω–∏—è

# 1. ID –≤–∞—à–µ–π –ï–î–ò–ù–û–ô —Ç–∞–±–ª–∏—Ü—ã (–≥–¥–µ –∏ –¥–∞—à–±–æ—Ä–¥, –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
DASHBOARD_AND_SETTINGS_SHEET_ID = '1s_m6Sssjld0BFwhGDVXEC4YRWeH3dYgzNpgiTMwdgSk'

# 2. –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞, –≥–¥–µ –ª–µ–∂–∏—Ç —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
SETTINGS_WORKSHEET_NAME = 'crm' # <-- –í–ê–ñ–ù–û: —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞

# 3. –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞, –ö–£–î–ê –≤—ã–≥—Ä—É–∂–∞—Ç—å —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
TARGET_WORKSHEET_NAME = 'lidscrm'

# 4. –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –≤ –ò–°–•–û–î–ù–´–• CRM-—Ç–∞–±–ª–∏—Ü–∞—Ö, –æ—Ç–∫—É–¥–∞ –∑–∞–±–∏—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
CRM_WORKSHEET_NAME = '–õ–∏–¥—ã' 
# --- –ö–û–ù–ï–¶ –ù–ê–°–¢–†–û–ï–ö ---

def run_etl():
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
    try:
        sa_key_string = os.environ.get('GCP_SA_KEY')
        sa_key_json = json.loads(sa_key_string)
        gc = gspread.service_account_from_dict(sa_key_json)
        print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–∞.")
    except Exception as e:
        raise SystemExit(f"üî•üî• –û–®–ò–ë–ö–ê –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò: {e}")

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    try:
        dashboard_spreadsheet = gc.open_by_key(DASHBOARD_AND_SETTINGS_SHEET_ID)
        master_sheet = dashboard_spreadsheet.worksheet(SETTINGS_WORKSHEET_NAME)
        sources_df = pd.DataFrame(master_sheet.get_all_records())
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(sources_df)} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫.")
    except Exception as e:
        raise SystemExit(f"üî•üî• –û–®–ò–ë–ö–ê —á—Ç–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")

    # –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    all_leads_dfs = []
    for index, row in sources_df.iterrows():
        team_name = row.get('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã', f'–ò—Å—Ç–æ—á–Ω–∏–∫ {index+1}')
        sheet_id = row['ID —Ç–µ–∫—É—â–µ–π —Ç–∞–±–ª–∏—Ü—ã']
        if not sheet_id: 
            print(f"  - –ü—Ä–æ–ø—É—â–µ–Ω '{team_name}' (ID –Ω–µ —É–∫–∞–∑–∞–Ω).")
            continue

        try:
            print(f"  - –û–±—Ä–∞–±–æ—Ç–∫–∞ '{team_name}'...")
            worksheet = gc.open_by_key(sheet_id).worksheet(CRM_WORKSHEET_NAME)
            data = worksheet.get_all_values()
            if len(data) < 2: 
                print(f"    -> –ü—Ä–æ–ø—É—â–µ–Ω–æ (–ª–∏—Å—Ç –ø—É—Å—Ç–æ–π).")
                continue

            df = pd.DataFrame(data[1:], columns=data[0])
            df['–ò—Å—Ç–æ—á–Ω–∏–∫ (–ö–æ–º–∞–Ω–¥–∞)'] = team_name
            all_leads_dfs.append(df)
            print(f"    -> –£—Å–ø–µ—à–Ω–æ! –ü—Ä–æ—á–∏—Ç–∞–Ω–æ {len(df)} —Å—Ç—Ä–æ–∫.")
        except Exception as e:
            print(f"    -> üî• –û–®–ò–ë–ö–ê –¥–ª—è '{team_name}': {e}")
    
    if not all_leads_dfs:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∏ –∏–∑ –æ–¥–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ.")
        return

    # –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –≤—ã–≥—Ä—É–∑–∫–∞
    final_df = pd.concat(all_leads_dfs, ignore_index=True)
    print(f"‚úÖ –ò—Ç–æ–≥–æ —Å–æ–±—Ä–∞–Ω–æ {len(final_df)} —Å—Ç—Ä–æ–∫.")
    
    try:
        target_spreadsheet = dashboard_spreadsheet # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –æ—Ç–∫—Ä—ã—Ç—É—é —Ç–∞–±–ª–∏—Ü—É
        try:
            worksheet_to_write = target_spreadsheet.worksheet(TARGET_WORKSHEET_NAME)
            worksheet_to_write.clear()
        except gspread.exceptions.WorksheetNotFound:
            worksheet_to_write = target_spreadsheet.add_worksheet(title=TARGET_WORKSHEET_NAME, rows=1, cols=1)

        final_df_list = [final_df.columns.values.tolist()] + final_df.fillna("").astype(str).values.tolist()
        worksheet_to_write.update(final_df_list, value_input_option='USER_ENTERED')
        worksheet_to_write.format('A1:Z1', {'textFormat': {'bold': True}})
        print(f"üéâ –£–°–ü–ï–•! –î–∞–Ω–Ω—ã–µ –≤—ã–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ –ª–∏—Å—Ç '{TARGET_WORKSHEET_NAME}'.")
    except Exception as e:
        raise SystemExit(f"üî•üî• –û–®–ò–ë–ö–ê –≤—ã–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    run_etl()
