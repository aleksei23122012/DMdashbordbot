<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Дашборд для Telegram Web App</title>
    <!-- Подключаем библиотеку для создания диаграмм -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Подключаем современный шрифт для лучшей читаемости -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Подключаем библиотеку Supabase -->
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
    
    <!-- Подключаем официальный скрипт Telegram для Web Apps -->
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    
    <style>
        /* Ваши стили остаются без изменений */
        :root {
            --primary-blue: #007AFF;
            --light-blue: #EAF5FF;
            --primary-green: #34C759;
            --light-green: #E3F8E9;
            --primary-yellow: #FF9500;
            --light-yellow: #FFF6E5;
            
            --bg-color: #F5F7FA;
            --card-color: #FFFFFF;
            --text-primary: #1D232A;
            --text-secondary: #6C757D;
            --border-color: #E9ECEF;
        }

        body, html { height: 100%; margin: 0; font-family: 'Inter', sans-serif; background-color: var(--bg-color); color: var(--text-primary); overflow: hidden; }
        .dashboard-container { display: flex; flex-direction: column; height: 100vh; }
        .main-content { display: flex; flex-grow: 1; height: 90vh; padding: 0 12px 12px 12px; gap: 12px; box-sizing: border-box; }
        .block-v { height: 10vh; display: flex; justify-content: space-between; align-items: center; padding: 0 24px; background-color: var(--card-color); border-bottom: 1px solid var(--border-color); box-sizing: border-box; }
        .header-buttons button { margin-right: 12px; padding: 10px 20px; border: none; border-radius: 8px; background-color: var(--primary-blue); color: white; cursor: pointer; font-size: 14px; font-weight: 600; transition: background-color 0.2s; }
        .user-info-container { display: flex; align-items: center; gap: 16px; }
        #operator-name { font-weight: 600; font-size: 18px; }
        #dashboard-date { font-size: 15px; font-weight: 500; color: var(--text-secondary); background-color: var(--bg-color); padding: 6px 12px; border-radius: 8px; }
        /* ... остальные ваши стили ... */
    </style>
</head>
<body>
    <!-- Ваша HTML структура остается без изменений -->
    <div class="dashboard-container">
        <!-- ... блоки В, Л, С, П ... -->
    </div>

    <!-- JavaScript для инициализации дашборда -->
       <!-- JavaScript для инициализации дашборда -->
    <script>
        // === Логика для загрузки данных из Supabase ===
        const supabaseUrl = 'https://yhjrhnglgtenxwncrrnf.supabase.co';
        const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InloanJobmdsZ3Rlbnh3bmNycm5mIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwODA3MDksImV4cCI6MjA2ODY1NjcwOX0.0sSrzNrc08de6h9vWkDJxMBN4OTT2qsNhGhDvQ9VgbI';
        const supabaseClient = supabase.createClient(supabaseUrl, supabaseKey);

        async function fetchDashboardData(telegramUsername) {
            try {
                const { data, error } = await supabaseClient
                    .from('TMday')
                    .select('operator, trafic, kz, lid, avg_time_lid, date')
                    .eq('tg', telegramUsername) // Ищем по столбцу 'tg'
                    .limit(1)
                    .single();

                if (error) {
                    if (error.code === 'PGRST116') {
                        console.warn(`Пользователь с юзернеймом "${telegramUsername}" не найден в базе.`);
                        document.getElementById('operator-name').textContent = 'Доступ запрещен';
                    } else {
                        throw error;
                    }
                    return;
                }

                if (data) {
                    // Логика обновления дашборда
                    document.getElementById('operator-name').textContent = data.operator ?? 'Не найден';
                    // ... и остальная логика обновления ...
                }

            } catch (error) {
                console.error('Ошибка при загрузке данных с Supabase:', error.message);
                document.getElementById('operator-name').textContent = 'Ошибка загрузки';
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            // === ДИАГНОСТИЧЕСКИЙ БЛОК ===
            try {
                Telegram.WebApp.ready();

                // Показываем все, что есть в initDataUnsafe
                alert('Данные от Telegram: ' + JSON.stringify(Telegram.WebApp.initDataUnsafe, null, 2));

                const user = Telegram.WebApp.initDataUnsafe?.user;

                if (user?.username) {
                    const telegramUsername = `@${user.username}`;
                    alert(`Юзернейм найден: ${telegramUsername}. Начинаю поиск в базе.`);
                    fetchDashboardData(telegramUsername);
                } else {
                    alert('Ошибка: user.username не найден в данных от Telegram.');
                    document.getElementById('operator-name').textContent = 'Ошибка: нет юзернейма';
                }

            } catch (e) {
                // Эта ошибка сработает, если вы открыли страницу НЕ в Telegram
                alert('Критическая ошибка: объект Telegram.WebApp не найден. Вы открыли страницу в обычном браузере, а не через бота в Telegram.');
                document.getElementById('operator-name').textContent = 'Откройте через Telegram';
            }

            // --- Логика для диаграммы ---
            const ctx = document.getElementById('doughnutChart')?.getContext('2d');
            if (ctx) {
                new Chart(ctx, { /* ... ваши настройки ... */ });
            }
        });
    </script>
</body>
</html>
